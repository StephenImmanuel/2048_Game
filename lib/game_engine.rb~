class GameEngine
  attr_accessor :board

  def initialize(board)
    @board = board
  end

  def update_board
    @columnCount = @board.size

    @board.each do |subarray|
      subarray.each_with_index do |value, columnIndex|
	   refIndex = subarray.size-columnIndex-1
        compareIndex = refIndex-1
         
        refValue = subarray[refIndex]
        compareValue = subarray[compareIndex] 

         if refValue.nil? then
            subarray.delete_at(refIndex)
            subarray.push(nil)
       elsif compareValue.nil? and (compareIndex >=0) then
            subarray.delete_at(compareIndex)
            subarray.push(nil)
       elsif refValue == compareValue then
            subarray[refIndex] *= 2
            subarray[compareIndex] = nil
        end
    end
        subarray.compact!
    end
  end

  def move_right
    update_board

    @board.each_with_index do |subarray|
    	 while subarray.count < 4 do subarray.unshift(nil) end 
    end

  end

  def move_left
    @board.each_with_index do |subarray, rowIndex| 
      @board[rowIndex] = subarray.reverse
    end

    update_board

    @board.each_with_index do |subarray, rowIndex| 
      @board[rowIndex] = subarray.reverse
    end

    @board.each_with_index do |subarray|
      while subarray.count < 4 do subarray.push(nil) end
    end
  end

  def move_down
    @board = @board.transpose
    move_right
    @board = @board.transpose
  end

  def move_up
    @board = @board.transpose
    move_left
    @board = @board.transpose
  end
end
